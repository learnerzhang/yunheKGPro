# Generated by Django 3.2.18 on 2024-10-29 03:12

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('menu_type', models.IntegerField(choices=[(0, '目录'), (1, '菜单'), (2, '按钮')], default=0, verbose_name='菜单类型')),
                ('desc', models.CharField(blank=True, help_text='菜单描述', max_length=512, verbose_name='菜单描述')),
                ('name', models.CharField(blank=True, help_text='路由名称', max_length=200, verbose_name='路由名称')),
                ('title', models.CharField(blank=True, help_text='菜单名称', max_length=200, verbose_name='菜单名称')),
                ('auth_ctt', models.CharField(blank=True, help_text='权限标识(菜单)', max_length=200, verbose_name='权限标识(菜单)')),
                ('icon', models.CharField(blank=True, default='ant-design:fund-projection-screen-outlined', help_text='菜单图标', max_length=200, verbose_name='菜单图标')),
                ('img', models.CharField(blank=True, default='/resource/image/menu/default.png', help_text='菜单图片', max_length=200, verbose_name='菜单图片')),
                ('path', models.CharField(blank=True, help_text='路由地址', max_length=512, verbose_name='路由地址')),
                ('redirect', models.CharField(blank=True, help_text='重定向', max_length=512, verbose_name='重定向')),
                ('component', models.CharField(blank=True, help_text='组件地址', max_length=512, verbose_name='组件地址')),
                ('rank', models.IntegerField(blank=True, default=0, help_text='排序', null=True, verbose_name='排序')),
                ('father_id', models.IntegerField(blank=True, default=0, help_text='父级菜单', null=True, verbose_name='父级菜单')),
                ('activate', models.IntegerField(blank=True, choices=[(0, '非激活'), (1, '激活')], default=1, help_text='激活状态', null=True, verbose_name='激活状态')),
                ('hideMenu', models.IntegerField(blank=True, choices=[(0, '隐藏'), (1, '显示')], default=1, help_text='是否显示', null=True, verbose_name='是否显示')),
                ('update_time', models.DateTimeField(default=datetime.datetime(2024, 10, 29, 11, 12, 49, 872719), null=True, verbose_name='更新时间')),
                ('create_time', models.DateTimeField(default=datetime.datetime(2024, 10, 29, 11, 12, 49, 872719), null=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '菜单表',
                'db_table': 'kg_menu',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='角色名称', max_length=200, verbose_name='角色名称')),
                ('user_id', models.IntegerField(default=0, help_text='用户ID', null=True, verbose_name='用户ID')),
                ('remark', models.CharField(help_text='备注', max_length=512, verbose_name='备注')),
                ('activate', models.IntegerField(default=1, help_text='激活状态', max_length=1, null=True, verbose_name='激活状态')),
                ('update_time', models.DateTimeField(default=datetime.datetime(2024, 10, 29, 11, 12, 49, 872719), null=True, verbose_name='更新时间')),
                ('create_time', models.DateTimeField(default=datetime.datetime(2024, 10, 29, 11, 12, 49, 872719), null=True, verbose_name='创建时间')),
                ('menus', models.ManyToManyField(blank=True, to='userapp.Menu', verbose_name='关联菜单')),
            ],
            options={
                'verbose_name_plural': '角色表',
                'db_table': 'kg_role',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telephone', models.CharField(max_length=11, verbose_name='手机号码')),
                ('icon', models.ImageField(default='/icon/default.jpg', upload_to='icon', verbose_name='用户头像')),
                ('name', models.CharField(max_length=12, verbose_name='用户姓名')),
                ('sex', models.IntegerField(choices=[(1, '男'), (0, '女')], default=1, verbose_name='性别')),
                ('role', models.IntegerField(choices=[(1, '超级管理员'), (2, '管理员'), (3, '普通用户'), (4, '临时用户')], default=4, verbose_name='用户角色')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
